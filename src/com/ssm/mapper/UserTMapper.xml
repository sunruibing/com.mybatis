<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.dao.UserTMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.UserT">
    <id column="openid" jdbcType="CHAR" property="openid" />
    <result column="unionid" jdbcType="CHAR" property="unionid" />
    <result column="authorizeState" jdbcType="INTEGER" property="authorizestate" />
    <result column="pirce" jdbcType="DECIMAL" property="pirce" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="fansNum" jdbcType="INTEGER" property="fansnum" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="phonenum" jdbcType="CHAR" property="phonenum" />
    <result column="headimgurl" jdbcType="VARCHAR" property="headimgurl" />
    <result column="privilege" jdbcType="VARCHAR" property="privilege" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="access_token" jdbcType="CHAR" property="accessToken" />
    <result column="refresh_token" jdbcType="CHAR" property="refreshToken" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    openid, unionid, authorizeState, pirce, description, fansNum, title, realname, phonenum, 
    headimgurl, privilege, country, city, province, sex, nickname, access_token, refresh_token
  </sql>
  <select id="selectByExample" parameterType="com.ssm.pojo.UserTExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_t
    where openid = #{openid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_t
    where openid = #{openid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.pojo.UserTExample">
    delete from user_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.UserT">
    insert into user_t (openid, unionid, authorizeState, 
      pirce, description, fansNum, 
      title, realname, phonenum, 
      headimgurl, privilege, country, 
      city, province, sex, 
      nickname, access_token, refresh_token
      )
    values (#{openid,jdbcType=CHAR}, #{unionid,jdbcType=CHAR}, #{authorizestate,jdbcType=INTEGER}, 
      #{pirce,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, #{fansnum,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{phonenum,jdbcType=CHAR}, 
      #{headimgurl,jdbcType=VARCHAR}, #{privilege,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{nickname,jdbcType=VARCHAR}, #{accessToken,jdbcType=CHAR}, #{refreshToken,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.UserT">
    insert into user_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        openid,
      </if>
      <if test="unionid != null">
        unionid,
      </if>
      <if test="authorizestate != null">
        authorizeState,
      </if>
      <if test="pirce != null">
        pirce,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="fansnum != null">
        fansNum,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="phonenum != null">
        phonenum,
      </if>
      <if test="headimgurl != null">
        headimgurl,
      </if>
      <if test="privilege != null">
        privilege,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="refreshToken != null">
        refresh_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        #{openid,jdbcType=CHAR},
      </if>
      <if test="unionid != null">
        #{unionid,jdbcType=CHAR},
      </if>
      <if test="authorizestate != null">
        #{authorizestate,jdbcType=INTEGER},
      </if>
      <if test="pirce != null">
        #{pirce,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="fansnum != null">
        #{fansnum,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=CHAR},
      </if>
      <if test="headimgurl != null">
        #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="privilege != null">
        #{privilege,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=CHAR},
      </if>
      <if test="refreshToken != null">
        #{refreshToken,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.pojo.UserTExample" resultType="java.lang.Long">
    select count(*) from user_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_t
    <set>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=CHAR},
      </if>
      <if test="record.unionid != null">
        unionid = #{record.unionid,jdbcType=CHAR},
      </if>
      <if test="record.authorizestate != null">
        authorizeState = #{record.authorizestate,jdbcType=INTEGER},
      </if>
      <if test="record.pirce != null">
        pirce = #{record.pirce,jdbcType=DECIMAL},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.fansnum != null">
        fansNum = #{record.fansnum,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null">
        phonenum = #{record.phonenum,jdbcType=CHAR},
      </if>
      <if test="record.headimgurl != null">
        headimgurl = #{record.headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.privilege != null">
        privilege = #{record.privilege,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.accessToken != null">
        access_token = #{record.accessToken,jdbcType=CHAR},
      </if>
      <if test="record.refreshToken != null">
        refresh_token = #{record.refreshToken,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_t
    set openid = #{record.openid,jdbcType=CHAR},
      unionid = #{record.unionid,jdbcType=CHAR},
      authorizeState = #{record.authorizestate,jdbcType=INTEGER},
      pirce = #{record.pirce,jdbcType=DECIMAL},
      description = #{record.description,jdbcType=VARCHAR},
      fansNum = #{record.fansnum,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      phonenum = #{record.phonenum,jdbcType=CHAR},
      headimgurl = #{record.headimgurl,jdbcType=VARCHAR},
      privilege = #{record.privilege,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      access_token = #{record.accessToken,jdbcType=CHAR},
      refresh_token = #{record.refreshToken,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.UserT">
    update user_t
    <set>
      <if test="unionid != null">
        unionid = #{unionid,jdbcType=CHAR},
      </if>
      <if test="authorizestate != null">
        authorizeState = #{authorizestate,jdbcType=INTEGER},
      </if>
      <if test="pirce != null">
        pirce = #{pirce,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="fansnum != null">
        fansNum = #{fansnum,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        phonenum = #{phonenum,jdbcType=CHAR},
      </if>
      <if test="headimgurl != null">
        headimgurl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="privilege != null">
        privilege = #{privilege,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=CHAR},
      </if>
      <if test="refreshToken != null">
        refresh_token = #{refreshToken,jdbcType=CHAR},
      </if>
    </set>
    where openid = #{openid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.UserT">
    update user_t
    set unionid = #{unionid,jdbcType=CHAR},
      authorizeState = #{authorizestate,jdbcType=INTEGER},
      pirce = #{pirce,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      fansNum = #{fansnum,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      phonenum = #{phonenum,jdbcType=CHAR},
      headimgurl = #{headimgurl,jdbcType=VARCHAR},
      privilege = #{privilege,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=CHAR},
      refresh_token = #{refreshToken,jdbcType=CHAR}
    where openid = #{openid,jdbcType=CHAR}
  </update>
</mapper>